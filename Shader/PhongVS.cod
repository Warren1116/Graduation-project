//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   float4 viewPosition;               // Offset:    0 Size:    16 [unused]
//   row_major float4x4 viewProjection; // Offset:   16 Size:    64
//   float4 ambientLightColor;          // Offset:   80 Size:    16 [unused]
//   
//   struct DirectionalLightData
//   {
//       
//       float4 direction;              // Offset:   96
//       float4 color;                  // Offset:  112
//
//   } directionalLightData;            // Offset:   96 Size:    32 [unused]
//   
//   struct SpotLightData
//   {
//       
//       float4 position;               // Offset:  128
//       float4 direction;              // Offset:  144
//       float4 color;                  // Offset:  160
//       float range;                   // Offset:  176
//       float power;                   // Offset:  180
//       float innerCorn;               // Offset:  184
//       float outerCorn;               // Offset:  188
//
//   } spotLightData[8];                // Offset:  128 Size:   512 [unused]
//   int spotLightCount;                // Offset:  640 Size:     4 [unused]
//   float3 dummy3;                     // Offset:  644 Size:    12 [unused]
//
// }
//
// cbuffer CbMesh
// {
//
//   row_major float4x4 boneTransforms[128];// Offset:    0 Size:  8192
//
// }
//
// cbuffer CbSubset
// {
//
//   float4 materialColor;              // Offset:    0 Size:    16
//
// }
//
// cbuffer CbShadowmap
// {
//
//   row_major float4x4 lightViewProjection[4];// Offset:    0 Size:   256
//   float4 shadowBias;                 // Offset:  256 Size:    16 [unused]
//   float3 shadowColor;                // Offset:  272 Size:    12 [unused]
//   float dummy;                       // Offset:  284 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbMesh                            cbuffer      NA          NA            cb1      1 
// CbSubset                          cbuffer      NA          NA            cb2      1 
// CbShadowmap                       cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
// WEIGHTS                  0   xyzw        5     NONE   float   xyzw
// BONES                    0   xyzw        6     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TANGENT                  0   xyz         3     NONE   float   xyz 
// BINORMAL                 0   xyz         4     NONE   float   xyz 
// TEXCOORD                 0   xy          5     NONE   float   xy  
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 1   xyz         7     NONE   float   xyz 
// TEXCOORD                 2   xyz         8     NONE   float   xyz 
// TEXCOORD                 3   xyz         9     NONE   float   xyz 
// TEXCOORD                 4   xyz        10     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB1[512], dynamicIndexed
dcl_constantbuffer CB2[1], immediateIndexed
dcl_constantbuffer CB3[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xy
dcl_output o6.xyzw
dcl_output o7.xyz
dcl_output o8.xyz
dcl_output o9.xyz
dcl_output o10.xyz
dcl_temps 6
dp4 r0.x, v5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r0.xyzw, v5.xyzw, r0.xxxx
ishl r1.xyzw, v6.xyzw, l(2, 2, 2, 2)
mul r2.xyz, v0.yyyy, cb1[r1.y + 1].xyzx
mad r2.xyz, v0.xxxx, cb1[r1.y + 0].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb1[r1.y + 2].xyzx, r2.xyzx
mad r2.xyz, v0.wwww, cb1[r1.y + 3].xyzx, r2.xyzx
mul r2.xyz, r0.yyyy, r2.xyzx
mul r3.xyz, v0.yyyy, cb1[r1.x + 1].xyzx
mad r3.xyz, v0.xxxx, cb1[r1.x + 0].xyzx, r3.xyzx
mad r3.xyz, v0.zzzz, cb1[r1.x + 2].xyzx, r3.xyzx
mad r3.xyz, v0.wwww, cb1[r1.x + 3].xyzx, r3.xyzx
mad r2.xyz, r0.xxxx, r3.xyzx, r2.xyzx
mul r3.xyz, v0.yyyy, cb1[r1.z + 1].xyzx
mad r3.xyz, v0.xxxx, cb1[r1.z + 0].xyzx, r3.xyzx
mad r3.xyz, v0.zzzz, cb1[r1.z + 2].xyzx, r3.xyzx
mad r3.xyz, v0.wwww, cb1[r1.z + 3].xyzx, r3.xyzx
mad r2.xyz, r0.zzzz, r3.xyzx, r2.xyzx
mul r3.xyz, v0.yyyy, cb1[r1.w + 1].xyzx
mad r3.xyz, v0.xxxx, cb1[r1.w + 0].xyzx, r3.xyzx
mad r3.xyz, v0.zzzz, cb1[r1.w + 2].xyzx, r3.xyzx
mad r3.xyz, v0.wwww, cb1[r1.w + 3].xyzx, r3.xyzx
mad r2.xyz, r0.wwww, r3.xyzx, r2.xyzx
mul r3.xyzw, r2.yyyy, cb0[2].xyzw
mad r3.xyzw, r2.xxxx, cb0[1].xyzw, r3.xyzw
mad r3.xyzw, r2.zzzz, cb0[3].xyzw, r3.xyzw
add o0.xyzw, r3.xyzw, cb0[4].xyzw
mov o1.xyz, r2.xyzx
mul r3.xyz, v1.yyyy, cb1[r1.y + 1].xyzx
mad r3.xyz, v1.xxxx, cb1[r1.y + 0].xyzx, r3.xyzx
mad r3.xyz, v1.zzzz, cb1[r1.y + 2].xyzx, r3.xyzx
mul r3.xyz, r0.yyyy, r3.xyzx
mul r4.xyz, v1.yyyy, cb1[r1.x + 1].xyzx
mad r4.xyz, v1.xxxx, cb1[r1.x + 0].xyzx, r4.xyzx
mad r4.xyz, v1.zzzz, cb1[r1.x + 2].xyzx, r4.xyzx
mad r3.xyz, r0.xxxx, r4.xyzx, r3.xyzx
mul r4.xyz, v1.yyyy, cb1[r1.z + 1].xyzx
mad r4.xyz, v1.xxxx, cb1[r1.z + 0].xyzx, r4.xyzx
mad r4.xyz, v1.zzzz, cb1[r1.z + 2].xyzx, r4.xyzx
mad r3.xyz, r0.zzzz, r4.xyzx, r3.xyzx
mul r4.xyz, v1.yyyy, cb1[r1.w + 1].xyzx
mad r4.xyz, v1.xxxx, cb1[r1.w + 0].xyzx, r4.xyzx
mad r4.xyz, v1.zzzz, cb1[r1.w + 2].xyzx, r4.xyzx
mad r3.xyz, r0.wwww, r4.xyzx, r3.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
mov o2.xyz, r3.xyzx
mul r4.xyz, v2.yyyy, cb1[r1.y + 1].xyzx
mad r4.xyz, v2.xxxx, cb1[r1.y + 0].xyzx, r4.xyzx
mad r4.xyz, v2.zzzz, cb1[r1.y + 2].xyzx, r4.xyzx
mul r4.xyz, r0.yyyy, r4.xyzx
mul r5.xyz, v2.yyyy, cb1[r1.x + 1].xyzx
mad r5.xyz, v2.xxxx, cb1[r1.x + 0].xyzx, r5.xyzx
mad r5.xyz, v2.zzzz, cb1[r1.x + 2].xyzx, r5.xyzx
mad r4.xyz, r0.xxxx, r5.xyzx, r4.xyzx
mul r5.xyz, v2.yyyy, cb1[r1.z + 1].xyzx
mad r5.xyz, v2.xxxx, cb1[r1.z + 0].xyzx, r5.xyzx
mad r1.xyz, v2.zzzz, cb1[r1.z + 2].xyzx, r5.xyzx
mad r0.xyz, r0.zzzz, r1.xyzx, r4.xyzx
mul r1.xyz, v2.yyyy, cb1[r1.w + 1].xyzx
mad r1.xyz, v2.xxxx, cb1[r1.w + 0].xyzx, r1.xyzx
mad r1.xyz, v2.zzzz, cb1[r1.w + 2].xyzx, r1.xyzx
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov o3.xyz, r0.xyzx
mul r1.xyz, r0.yzxy, r3.zxyz
mad r0.xyz, r3.yzxy, r0.zxyz, -r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o4.xyz, r0.wwww, r0.xyzx
mov o5.xy, v3.xyxx
mul o6.xyzw, v4.xyzw, cb2[0].xyzw
mul r0.xyzw, r2.yyyy, cb3[1].xyzw
mad r0.xyzw, r2.xxxx, cb3[0].xyzw, r0.xyzw
mad r0.xyzw, r2.zzzz, cb3[2].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
div r0.xyz, r0.xyzx, r0.wwww
mad o7.xyz, r0.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.xyzw, r2.yyyy, cb3[5].xyzw
mad r0.xyzw, r2.xxxx, cb3[4].xyzw, r0.xyzw
mad r0.xyzw, r2.zzzz, cb3[6].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[7].xyzw
div r0.xyz, r0.xyzx, r0.wwww
mad o8.xyz, r0.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.xyzw, r2.yyyy, cb3[9].xyzw
mad r0.xyzw, r2.xxxx, cb3[8].xyzw, r0.xyzw
mad r0.xyzw, r2.zzzz, cb3[10].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[11].xyzw
div r0.xyz, r0.xyzx, r0.wwww
mad o9.xyz, r0.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.xyzw, r2.yyyy, cb3[13].xyzw
mad r0.xyzw, r2.xxxx, cb3[12].xyzw, r0.xyzw
mad r0.xyzw, r2.zzzz, cb3[14].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[15].xyzw
div r0.xyz, r0.xyzx, r0.wwww
mad o10.xyz, r0.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
ret 
// Approximately 100 instruction slots used
