//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer RADIAL_BLUR_CONSTANT_BUFFER
// {
//
//   float blur_radius;                 // Offset:    0 Size:     4
//   int blur_sampling_count;           // Offset:    4 Size:     4
//   float2 blur_center;                // Offset:    8 Size:     8
//   float blur_mask_radius;            // Offset:   16 Size:     4
//   float3 blur_dummy;                 // Offset:   20 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sceneSampler                      sampler      NA          NA             s0      1 
// sceneTexture                      texture  float4          2d             t0      1 
// bloomTexture                      texture  float4          2d             t1      1 
// RADIAL_BLUR_CONSTANT_BUFFER       cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// DEPTH                    0     z         2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 5
resinfo_indexable(texture2d)(float,float,float,float) r0.xy, l(0), t0.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.xyxx, t0.xyzw, s0
add r0.zw, -v2.xxxy, cb1[0].zzzw
div r2.xy, cb1[0].xxxx, r0.xyxx
itof r2.z, cb1[0].y
div r2.xy, r2.xyxx, r2.zzzz
mul r0.zw, r0.zzzw, r2.xxxy
mov r3.xyzw, r1.xyzw
mov r2.x, l(1)
loop 
  ige r2.y, r2.x, cb1[0].y
  breakc_nz r2.y
  itof r2.y, r2.x
  mad r2.yw, r0.zzzw, r2.yyyy, v2.xxxy
  sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.ywyy, t0.xyzw, s0
  add r3.xyzw, r3.xyzw, r4.xyzw
  iadd r2.x, r2.x, l(1)
endloop 
min r0.x, r0.y, r0.x
div r0.x, cb1[1].x, r0.x
add r0.yz, v2.xxyx, -cb1[0].zzwz
dp2 r0.y, r0.yzyy, r0.yzyy
sqrt r0.y, r0.y
div_sat r0.x, r0.y, r0.x
div r2.xyzw, r3.xyzw, r2.zzzz
add r2.xyzw, -r1.xyzw, r2.xyzw
mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v2.xyxx, t1.xyzw, s0
add o0.xyz, r0.xyzx, r1.xyzx
mov o0.w, r0.w
ret 
// Approximately 31 instruction slots used
