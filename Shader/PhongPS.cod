//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   float4 viewPosition;               // Offset:    0 Size:    16
//   row_major float4x4 viewProjection; // Offset:   16 Size:    64 [unused]
//   float4 ambientLightColor;          // Offset:   80 Size:    16
//   
//   struct DirectionalLightData
//   {
//       
//       float4 direction;              // Offset:   96
//       float4 color;                  // Offset:  112
//
//   } directionalLightData;            // Offset:   96 Size:    32
//   
//   struct SpotLightData
//   {
//       
//       float4 position;               // Offset:  128
//       float4 direction;              // Offset:  144
//       float4 color;                  // Offset:  160
//       float range;                   // Offset:  176
//       float power;                   // Offset:  180
//       float innerCorn;               // Offset:  184
//       float outerCorn;               // Offset:  188
//
//   } spotLightData[8];                // Offset:  128 Size:   512
//   int spotLightCount;                // Offset:  640 Size:     4
//   float3 dummy3;                     // Offset:  644 Size:    12 [unused]
//
// }
//
// cbuffer CbShadowmap
// {
//
//   row_major float4x4 lightViewProjection;// Offset:    0 Size:    64 [unused]
//   float3 shadowColor;                // Offset:   64 Size:    12
//   float shadowBias;                  // Offset:   76 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuseMapSamplerState            sampler      NA          NA             s0      1 
// shadowMapSamplerState             sampler      NA          NA             s1      1 
// diffuseMap                        texture  float4          2d             t0      1 
// normalMap                         texture  float4          2d             t1      1 
// shadowMap                         texture  float4          2d             t2      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbShadowmap                       cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TANGENT                  0   xyz         3     NONE   float   xyz 
// BINORMAL                 0   xyz         4     NONE   float   xyz 
// TEXCOORD                 0   xy          5     NONE   float   xy  
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 1   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[41], dynamicIndexed
dcl_constantbuffer CB3[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 15
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.world_position.x; v1.y <- pin.world_position.y; v1.z <- pin.world_position.z; 
//   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
//   v3.x <- pin.tangent.x; v3.y <- pin.tangent.y; v3.z <- pin.tangent.z; 
//   v4.x <- pin.binormal.x; v4.y <- pin.binormal.y; v4.z <- pin.binormal.z; 
//   v5.x <- pin.texcoord.x; v5.y <- pin.texcoord.y; 
//   v6.x <- pin.color.x; v6.y <- pin.color.y; v6.z <- pin.color.z; v6.w <- pin.color.w; 
//   v7.x <- pin.shadowTexcoord.x; v7.y <- pin.shadowTexcoord.y; v7.z <- pin.shadowTexcoord.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 15 "C:\Users\2220012\Desktop\Graduation-project\HLSL\PhongPS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v5.xyxx, t0.xyzw, s0
mul r0.xyzw, r0.xyzw, v6.xyzw  // r0.x <- diffuseColor.x; r0.y <- diffuseColor.y; r0.z <- diffuseColor.z; r0.w <- diffuseColor.w

#line 18
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v5.xyxx, t1.xyzw, s0
mov r1.xyz, r1.xyzx  // r1.x <- normal.x; r1.y <- normal.y; r1.z <- normal.z

#line 24
dp3 r1.w, v3.xyzx, v3.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v3.xyzx
dp3 r1.w, v4.xyzx, v4.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v4.xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, v2.xyzx
mov r5.x, r2.x  // r5.x <- CM._m00
mov r5.y, r3.x  // r5.y <- CM._m10
mov r5.z, r4.x  // r5.z <- CM._m20
mov r6.x, r2.y  // r6.x <- CM._m01
mov r6.y, r3.y  // r6.y <- CM._m11
mov r6.z, r4.y  // r6.z <- CM._m21
mov r4.x, r2.z  // r4.x <- CM._m02
mov r4.y, r3.z  // r4.y <- CM._m12
mov r4.z, r4.z  // r4.z <- CM._m22

#line 28
mul r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r2.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r2.x, r1.xyzx, r5.xyzx
dp3 r2.y, r1.xyzx, r6.xyzx
dp3 r2.z, r1.xyzx, r4.xyzx
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r2.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 30
dp3 r1.w, cb0[6].xyzx, cb0[6].xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, cb0[6].xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 31
mov r3.xyz, -v1.xyzx
add r3.xyz, r3.xyzx, cb0[0].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx  // r3.x <- E.x; r3.y <- E.y; r3.z <- E.z

#line 34
itof r4.xyz, l(1, 1, 1, 0)  // r4.x <- ka.x; r4.y <- ka.y; r4.z <- ka.z

#line 35
itof r5.xyz, l(1, 1, 1, 0)  // r5.x <- kd.x; r5.y <- kd.y; r5.z <- kd.z

#line 36
itof r6.xyz, l(1, 1, 1, 0)  // r6.x <- ks.x; r6.y <- ks.y; r6.z <- ks.z

#line 37
itof r1.w, l(128)  // r1.w <- shiness

#line 41
mul r4.xyz, r4.xyzx, cb0[5].xyzx  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z

#line 49
nop 
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r7.xyz, cb0[7].xyzx
mov r5.xyz, r5.xyzx

#line 50 "C:\Users\2220012\Desktop\Graduation-project\HLSL\Light.hlsli"
mov r8.xyz, -r2.xyzx
dp3 r2.w, r1.xyzx, r8.xyzx
max r2.w, r2.w, l(0.000000)
min r2.w, r2.w, l(1.000000)  // r2.w <- d

#line 53
mul r7.xyz, r2.wwww, r7.xyzx
mul r7.xyz, r5.xyzx, r7.xyzx  // r7.x <- <CalcLambertDiffuse return value>.x; r7.y <- <CalcLambertDiffuse return value>.y; r7.z <- <CalcLambertDiffuse return value>.z

#line 49 "C:\Users\2220012\Desktop\Graduation-project\HLSL\PhongPS.hlsl"
mov r7.xyz, r7.xyzx  // r7.x <- diffuse.x; r7.y <- diffuse.y; r7.z <- diffuse.z

#line 50
nop 
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r8.xyz, cb0[7].xyzx
mov r3.xyz, r3.xyzx
mov r1.w, r1.w
mov r6.xyz, r6.xyzx

#line 69 "C:\Users\2220012\Desktop\Graduation-project\HLSL\Light.hlsli"
dp3 r2.w, r2.xyzx, r1.xyzx
add r2.w, r2.w, r2.w
mov r2.w, -r2.w
mul r9.xyz, r1.xyzx, r2.wwww
add r2.xyz, r2.xyzx, r9.xyzx  // r2.x <- R.x; r2.y <- R.y; r2.z <- R.z

#line 73
dp3 r2.x, r3.xyzx, r2.xyzx
itof r2.y, l(0)
max r2.x, r2.y, r2.x  // r2.x <- d

#line 79
log r2.x, r2.x
mul r2.x, r1.w, r2.x
exp r2.x, r2.x  // r2.x <- d

#line 82
mul r2.xyz, r2.xxxx, r8.xyzx
mul r2.xyz, r6.xyzx, r2.xyzx  // r2.x <- <CalcPhongSpecular return value>.x; r2.y <- <CalcPhongSpecular return value>.y; r2.z <- <CalcPhongSpecular return value>.z

#line 50 "C:\Users\2220012\Desktop\Graduation-project\HLSL\PhongPS.hlsl"
mov r2.xyz, r2.xyzx  // r2.x <- specular.x; r2.y <- specular.y; r2.z <- specular.z

#line 53
nop 
nop 
nop 
mov r8.xyz, v7.xyzx
mov r9.xyz, cb3[4].xyzx
mov r2.w, cb3[4].w

#line 58 "C:\Users\2220012\Desktop\Graduation-project\HLSL\ShadowmapFunctions.hlsli"
resinfo_indexable(texture2d)(float,float,float,float)_uint r10.xy, l(0), t2.xyzw
mov r10.x, r10.x  // r10.x <- width
mov r10.y, r10.y  // r10.y <- height

#line 61
utof r3.w, r10.x
div r11.x, l(1.000000), r3.w  // r11.x <- texelSize.x
utof r3.w, r10.y
div r11.y, l(1.000000), r3.w  // r11.y <- texelSize.y

#line 64
itof r3.w, l(0)  // r3.w <- factor

#line 66
mov r4.w, l(-2)  // r4.w <- x
mov r5.w, r3.w  // r5.w <- factor
mov r6.w, r4.w  // r6.w <- x
loop 
  ige r7.w, l(2), r6.w
  breakc_z r7.w

#line 68
  mov r7.w, l(-2)  // r7.w <- y
  mov r8.w, r5.w  // r8.w <- factor
  mov r9.w, r7.w  // r9.w <- y
  loop 
    ige r10.x, l(2), r9.w
    breakc_z r10.x

#line 71
    itof r10.x, r6.w
    itof r10.y, r9.w
    mul r10.xy, r10.xyxx, r11.xyxx
    add r10.xy, r8.xyxx, r10.xyxx
    sample_indexable(texture2d)(float,float,float,float) r10.x, r10.xyxx, t2.xyzw, s1
    mov r10.x, r10.x  // r10.x <- depth

#line 72
    mov r10.x, -r10.x
    add r10.x, r8.z, r10.x
    ge r10.x, r2.w, r10.x
    movc r10.x, r10.x, l(1.000000), l(0)
    add r8.w, r8.w, r10.x

#line 73
    iadd r9.w, r9.w, l(1)
  endloop 
  mov r5.w, r8.w  // r5.w <- factor

#line 74
  iadd r6.w, r6.w, l(1)
endloop 

#line 76
itof r8.xyz, l(1, 1, 1, 0)
itof r2.w, l(25)
div r2.w, r5.w, r2.w
mov r10.xyz, -r9.xyzx
add r8.xyz, r8.xyzx, r10.xyzx
mul r8.xyz, r2.wwww, r8.xyzx
add r8.xyz, r8.xyzx, r9.xyzx  // r8.x <- <CalcShadowColorPCFFilter return value>.x; r8.y <- <CalcShadowColorPCFFilter return value>.y; r8.z <- <CalcShadowColorPCFFilter return value>.z

#line 53 "C:\Users\2220012\Desktop\Graduation-project\HLSL\PhongPS.hlsl"
mov r8.xyz, r8.xyzx  // r8.x <- shadow.x; r8.y <- shadow.y; r8.z <- shadow.z

#line 73
mul r7.xyz, r7.xyzx, r8.xyzx

#line 74
mul r2.xyz, r2.xyzx, r8.xyzx

#line 77
mov r2.w, l(0)  // r2.w <- i
mov r8.xyz, r7.xyzx  // r8.x <- diffuse.x; r8.y <- diffuse.y; r8.z <- diffuse.z
mov r9.xyz, r2.xyzx  // r9.x <- specular.x; r9.y <- specular.y; r9.z <- specular.z
mov r3.w, r2.w  // r3.w <- i
loop 
  ilt r4.w, r3.w, cb0[40].x
  breakc_z r4.w

#line 80
  imul null, r4.w, r3.w, l(4)
  mov r10.xyz, -cb0[r4.w + 8].xyzx
  add r10.xyz, r10.xyzx, v1.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z

#line 83
  dp3 r4.w, r10.xyzx, r10.xyzx
  sqrt r4.w, r4.w  // r4.w <- lightLength

#line 85
  imul null, r5.w, r3.w, l(4)
  ge r5.w, r4.w, cb0[r5.w + 11].x
  if_nz r5.w

#line 86
    iadd r3.w, r3.w, l(1)
    continue 
  endif 

#line 89
  imul null, r5.w, r3.w, l(4)
  div r4.w, r4.w, cb0[r5.w + 11].x
  mov r4.w, -r4.w
  add r4.w, r4.w, l(1.000000)
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)  // r4.w <- attenuate

#line 91
  dp3 r5.w, r10.xyzx, r10.xyzx
  rsq r5.w, r5.w
  mul r10.xyz, r5.wwww, r10.xyzx

#line 94
  imul null, r5.w, r3.w, l(4)
  dp3 r6.w, cb0[r5.w + 9].xyzx, cb0[r5.w + 9].xyzx
  rsq r6.w, r6.w
  mul r11.xyz, r6.wwww, cb0[r5.w + 9].xyzx  // r11.x <- spotDirection.x; r11.y <- spotDirection.y; r11.z <- spotDirection.z

#line 95
  dp3 r5.w, r11.xyzx, r10.xyzx  // r5.w <- angle

#line 96
  imul null, r6.w, r3.w, l(4)
  imul null, r7.w, r3.w, l(4)
  mov r7.w, -cb0[r7.w + 11].w
  add r6.w, r7.w, cb0[r6.w + 11].z  // r6.w <- area

#line 97
  imul null, r7.w, r3.w, l(4)
  mov r5.w, -r5.w
  add r5.w, r5.w, cb0[r7.w + 11].z
  div r5.w, r5.w, r6.w
  mov r5.w, -r5.w
  add r5.w, r5.w, l(1.000000)
  max r5.w, r5.w, l(0.000000)
  min r5.w, r5.w, l(1.000000)
  mul r4.w, r4.w, r5.w

#line 99
  nop 
  mov r11.xyz, r1.xyzx
  mov r10.xyz, r10.xyzx
  imul null, r5.w, r3.w, l(4)
  mov r12.xyz, cb0[r5.w + 10].xyzx
  mov r13.xyz, r5.xyzx

#line 50 "C:\Users\2220012\Desktop\Graduation-project\HLSL\Light.hlsli"
  mov r14.xyz, -r10.xyzx
  dp3 r5.w, r11.xyzx, r14.xyzx
  max r5.w, r5.w, l(0.000000)
  min r5.w, r5.w, l(1.000000)  // r5.w <- d

#line 53
  mul r11.xyz, r5.wwww, r12.xyzx
  mul r11.xyz, r13.xyzx, r11.xyzx  // r11.x <- <CalcLambertDiffuse return value>.x; r11.y <- <CalcLambertDiffuse return value>.y; r11.z <- <CalcLambertDiffuse return value>.z

#line 99 "C:\Users\2220012\Desktop\Graduation-project\HLSL\PhongPS.hlsl"
  mul r11.xyz, r4.wwww, r11.xyzx
  add r8.xyz, r8.xyzx, r11.xyzx

#line 101
  nop 
  mov r11.xyz, r1.xyzx
  mov r10.xyz, r10.xyzx
  imul null, r5.w, r3.w, l(4)
  mov r12.xyz, cb0[r5.w + 10].xyzx
  mov r13.xyz, r3.xyzx
  mov r5.w, r1.w
  mov r14.xyz, r6.xyzx

#line 69 "C:\Users\2220012\Desktop\Graduation-project\HLSL\Light.hlsli"
  dp3 r6.w, r10.xyzx, r11.xyzx
  add r6.w, r6.w, r6.w
  mov r6.w, -r6.w
  mul r11.xyz, r6.wwww, r11.xyzx
  add r10.xyz, r10.xyzx, r11.xyzx  // r10.x <- R.x; r10.y <- R.y; r10.z <- R.z

#line 73
  dp3 r6.w, r13.xyzx, r10.xyzx
  itof r7.w, l(0)
  max r6.w, r6.w, r7.w  // r6.w <- d

#line 79
  log r6.w, r6.w
  mul r5.w, r5.w, r6.w
  exp r5.w, r5.w  // r5.w <- d

#line 82
  mul r10.xyz, r5.wwww, r12.xyzx
  mul r10.xyz, r14.xyzx, r10.xyzx  // r10.x <- <CalcPhongSpecular return value>.x; r10.y <- <CalcPhongSpecular return value>.y; r10.z <- <CalcPhongSpecular return value>.z

#line 101 "C:\Users\2220012\Desktop\Graduation-project\HLSL\PhongPS.hlsl"
  mul r10.xyz, r4.wwww, r10.xyzx
  add r9.xyz, r9.xyzx, r10.xyzx

#line 77
  iadd r3.w, r3.w, l(1)

#line 104
endloop 

#line 106
add r1.xyz, r4.xyzx, r8.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
add o0.xyz, r9.xyzx, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 218 instruction slots used
