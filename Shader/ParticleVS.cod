//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 view;           // Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewProjection; // Offset:   64 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// LIFE                     0   x           1     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// LIFE                     0      w        0     NONE   float      w
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[8], immediateIndexed
dcl_input v0.xyz
dcl_input v1.x
dcl_output o0.xyz
dcl_output o0.w
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- p.position.x; v0.y <- p.position.y; v0.z <- p.position.z; 
//   v1.x <- p.life; 
//   o0.x <- <main return value>.worldPos.x; o0.y <- <main return value>.worldPos.y; o0.z <- <main return value>.worldPos.z; o0.w <- <main return value>.life
//
#line 32 "C:\Users\2220012\Desktop\Graduation-project\HLSL\ParticleVS.hlsl"
mul r0.xyz, v0.xxxx, cb0[4].xyzx
mul r1.xyz, v0.yyyy, cb0[5].xyzx
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.xyz, v0.zzzz, cb0[6].xyzx
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.xyz, cb0[7].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- o.worldPos.x; r0.y <- o.worldPos.y; r0.z <- o.worldPos.z

#line 33
mov r0.w, v1.x  // r0.w <- o.life

#line 35
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 11 instruction slots used
