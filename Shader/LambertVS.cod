//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   float4 viewPosition;               // Offset:    0 Size:    16 [unused]
//   row_major float4x4 viewProjection; // Offset:   16 Size:    64
//   float4 lightDirection;             // Offset:   80 Size:    16
//   row_major float4x4 projection;     // Offset:   96 Size:    64 [unused]
//   row_major float4x4 inverseView;    // Offset:  160 Size:    64 [unused]
//   row_major float4x4 inverseProjection;// Offset:  224 Size:    64 [unused]
//
// }
//
// cbuffer CbMesh
// {
//
//   row_major float4x4 boneTransforms[128];// Offset:    0 Size:  8192
//
// }
//
// cbuffer CbSubset
// {
//
//   float4 materialColor;              // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbMesh                            cbuffer      NA          NA            cb1      1 
// CbSubset                          cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyz         2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
// WEIGHTS                  0   xyzw        5     NONE   float   xyzw
// BONES                    0   xyzw        6     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_constantbuffer CB1[512], dynamicIndexed
dcl_constantbuffer CB2[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_temps 4
dp4 r0.x, v5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r0.xyzw, v5.xyzw, r0.xxxx
ishl r1.xyzw, v6.xyzw, l(2, 2, 2, 2)
mul r2.xyz, v0.yyyy, cb1[r1.y + 1].xyzx
mad r2.xyz, v0.xxxx, cb1[r1.y + 0].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb1[r1.y + 2].xyzx, r2.xyzx
mad r2.xyz, v0.wwww, cb1[r1.y + 3].xyzx, r2.xyzx
mul r2.xyz, r0.yyyy, r2.xyzx
mul r3.xyz, v0.yyyy, cb1[r1.x + 1].xyzx
mad r3.xyz, v0.xxxx, cb1[r1.x + 0].xyzx, r3.xyzx
mad r3.xyz, v0.zzzz, cb1[r1.x + 2].xyzx, r3.xyzx
mad r3.xyz, v0.wwww, cb1[r1.x + 3].xyzx, r3.xyzx
mad r2.xyz, r0.xxxx, r3.xyzx, r2.xyzx
mul r3.xyz, v0.yyyy, cb1[r1.z + 1].xyzx
mad r3.xyz, v0.xxxx, cb1[r1.z + 0].xyzx, r3.xyzx
mad r3.xyz, v0.zzzz, cb1[r1.z + 2].xyzx, r3.xyzx
mad r3.xyz, v0.wwww, cb1[r1.z + 3].xyzx, r3.xyzx
mad r2.xyz, r0.zzzz, r3.xyzx, r2.xyzx
mul r3.xyz, v0.yyyy, cb1[r1.w + 1].xyzx
mad r3.xyz, v0.xxxx, cb1[r1.w + 0].xyzx, r3.xyzx
mad r3.xyz, v0.zzzz, cb1[r1.w + 2].xyzx, r3.xyzx
mad r3.xyz, v0.wwww, cb1[r1.w + 3].xyzx, r3.xyzx
mad r2.xyz, r0.wwww, r3.xyzx, r2.xyzx
mul r3.xyzw, r2.yyyy, cb0[2].xyzw
mad r3.xyzw, r2.xxxx, cb0[1].xyzw, r3.xyzw
mad r2.xyzw, r2.zzzz, cb0[3].xyzw, r3.xyzw
add o0.xyzw, r2.xyzw, cb0[4].xyzw
mov o1.xy, v3.xyxx
mul r2.xyz, v1.yyyy, cb1[r1.y + 1].xyzx
mad r2.xyz, v1.xxxx, cb1[r1.y + 0].xyzx, r2.xyzx
mad r2.xyz, v1.zzzz, cb1[r1.y + 2].xyzx, r2.xyzx
mul r2.xyz, r0.yyyy, r2.xyzx
mul r3.xyz, v1.yyyy, cb1[r1.x + 1].xyzx
mad r3.xyz, v1.xxxx, cb1[r1.x + 0].xyzx, r3.xyzx
mad r3.xyz, v1.zzzz, cb1[r1.x + 2].xyzx, r3.xyzx
mad r2.xyz, r0.xxxx, r3.xyzx, r2.xyzx
mul r3.xyz, v1.yyyy, cb1[r1.z + 1].xyzx
mad r3.xyz, v1.xxxx, cb1[r1.z + 0].xyzx, r3.xyzx
mad r1.xyz, v1.zzzz, cb1[r1.z + 2].xyzx, r3.xyzx
mad r0.xyz, r0.zzzz, r1.xyzx, r2.xyzx
mul r1.xyz, v1.yyyy, cb1[r1.w + 1].xyzx
mad r1.xyz, v1.xxxx, cb1[r1.w + 0].xyzx, r1.xyzx
mad r1.xyz, v1.zzzz, cb1[r1.w + 2].xyzx, r1.xyzx
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, -cb0[5].xyzx, -cb0[5].xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, -cb0[5].xyzx
dp3 r0.x, r1.xyzx, r0.xyzx
max r0.x, r0.x, l(0.000000)
mad r0.x, r0.x, l(0.500000), l(0.500000)
mul r0.yzw, v4.xxyz, cb2[0].xxyz
mul o2.xyz, r0.xxxx, r0.yzwy
mul o2.w, v4.w, cb2[0].w
ret 
// Approximately 57 instruction slots used
